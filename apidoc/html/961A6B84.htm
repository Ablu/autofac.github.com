<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ServiceHostInterfaceProxyGenerator.GetTypeImplementerMapping Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="GetTypeImplementerMapping method" /><meta name="System.Keywords" content="ServiceHostInterfaceProxyGenerator.GetTypeImplementerMapping method" /><meta name="Microsoft.Help.F1" content="Autofac.Multitenant.Wcf.DynamicProxy.ServiceHostInterfaceProxyGenerator.GetTypeImplementerMapping" /><meta name="Microsoft.Help.Id" content="M:Autofac.Multitenant.Wcf.DynamicProxy.ServiceHostInterfaceProxyGenerator.GetTypeImplementerMapping(System.Type[],System.Type,System.Collections.Generic.IEnumerable{Castle.DynamicProxy.Contributors.ITypeContributor}@,Castle.DynamicProxy.Generators.INamingScope)" /><meta name="Description" content="Gets the contributors for generating the type definition." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Autofac.Multitenant.Wcf.DynamicProxy" /><meta name="file" content="961A6B84" /><meta name="guid" content="961A6B84" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Autofac .NET Inversion of Control Container<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="62C594FF.htm" title="Autofac .NET Inversion of Control Container" tocid="roottoc">Autofac .NET Inversion of Control Container</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="62C594FF.htm" title="Autofac" tocid="62C594FF">Autofac</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6EC2EF93.htm" title="Autofac.Multitenant.Wcf.DynamicProxy" tocid="6EC2EF93">Autofac.Multitenant.Wcf.DynamicProxy</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="B11048C8.htm" title="ServiceHostInterfaceProxyGenerator Class" tocid="B11048C8">ServiceHostInterfaceProxyGenerator Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="AF3499B7.htm" title="ServiceHostInterfaceProxyGenerator Methods" tocid="AF3499B7">ServiceHostInterfaceProxyGenerator Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="86CC6208.htm" title="CreateTypeAttributes Method " tocid="86CC6208">CreateTypeAttributes Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="961A6B84.htm" title="GetTypeImplementerMapping Method " tocid="961A6B84">GetTypeImplementerMapping Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">ServiceHostInterfaceProxyGenerator<span id="LSTF63FAA5_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF63FAA5_0?cpp=::|nu=.");</script>GetTypeImplementerMapping Method </td></tr></table><span class="introStyle"></span> <div class="summary">
            Gets the contributors for generating the type definition.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="6EC2EF93.htm">Autofac.Multitenant.Wcf.DynamicProxy</a><br />
    <strong>Assembly:</strong>
   Autofac.Multitenant.Wcf (in Autofac.Multitenant.Wcf.dll) Version: 4.0.0-CI-234<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">Type</span>&gt; <span class="identifier">GetTypeImplementerMapping</span>(
	<span class="identifier">Type</span>[] <span class="parameter">interfaces</span>,
	<span class="identifier">Type</span> <span class="parameter">proxyTargetType</span>,
	<span class="keyword">out</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">ITypeContributor</span>&gt; <span class="parameter">contributors</span>,
	<span class="identifier">INamingScope</span> <span class="parameter">namingScope</span>
)

<span class="keyword">protected</span> <span class="keyword">override</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">Type</span>&gt; <span class="identifier">GetTypeImplementerMapping</span>(
	<span class="identifier">Type</span>[] <span class="parameter">interfaces</span>,
	<span class="identifier">Type</span> <span class="parameter">proxyTargetType</span>,
	<span class="keyword">out</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">ITypeContributor</span>&gt; <span class="parameter">contributors</span>,
	<span class="identifier">INamingScope</span> <span class="parameter">namingScope</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Protected</span> <span class="keyword">Overrides</span> <span class="keyword">Function</span> <span class="identifier">GetTypeImplementerMapping</span> ( 
	<span class="parameter">interfaces</span> <span class="keyword">As</span> <span class="identifier">Type</span>(),
	<span class="parameter">proxyTargetType</span> <span class="keyword">As</span> <span class="identifier">Type</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">contributors</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">ITypeContributor</span>),
	<span class="parameter">namingScope</span> <span class="keyword">As</span> <span class="identifier">INamingScope</span>
) <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">Type</span>)

<span class="keyword">Protected</span> <span class="keyword">Overrides</span> <span class="keyword">Function</span> <span class="identifier">GetTypeImplementerMapping</span> ( 
	<span class="parameter">interfaces</span> <span class="keyword">As</span> <span class="identifier">Type</span>(),
	<span class="parameter">proxyTargetType</span> <span class="keyword">As</span> <span class="identifier">Type</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">contributors</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">ITypeContributor</span>),
	<span class="parameter">namingScope</span> <span class="keyword">As</span> <span class="identifier">INamingScope</span>
) <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">Type</span>)</pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">protected</span>:
<span class="keyword">virtual</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">Type</span>^&gt;^ <span class="identifier">GetTypeImplementerMapping</span>(
	<span class="keyword">array</span>&lt;<span class="identifier">Type</span>^&gt;^ <span class="parameter">interfaces</span>, 
	<span class="identifier">Type</span>^ <span class="parameter">proxyTargetType</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">IEnumerable</span>&lt;<span class="identifier">ITypeContributor</span>^&gt;^% <span class="parameter">contributors</span>, 
	<span class="identifier">INamingScope</span>^ <span class="parameter">namingScope</span>
) <span class="keyword">override</span>

<span class="keyword">protected</span>:
<span class="keyword">virtual</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">Type</span>^&gt;^ <span class="identifier">GetTypeImplementerMapping</span>(
	<span class="keyword">array</span>&lt;<span class="identifier">Type</span>^&gt;^ <span class="parameter">interfaces</span>, 
	<span class="identifier">Type</span>^ <span class="parameter">proxyTargetType</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">IEnumerable</span>&lt;<span class="identifier">ITypeContributor</span>^&gt;^% <span class="parameter">contributors</span>, 
	<span class="identifier">INamingScope</span>^ <span class="parameter">namingScope</span>
) <span class="keyword">override</span></pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">abstract</span> <span class="identifier">GetTypeImplementerMapping</span> : 
        <span class="parameter">interfaces</span> : <span class="identifier">Type</span>[] * 
        <span class="parameter">proxyTargetType</span> : <span class="identifier">Type</span> * 
        <span class="parameter">contributors</span> : <span class="identifier">IEnumerable</span>&lt;<span class="identifier">ITypeContributor</span>&gt; <span class="keyword">byref</span> * 
        <span class="parameter">namingScope</span> : <span class="identifier">INamingScope</span> <span class="keyword">-&gt;</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">Type</span>&gt; 
<span class="keyword">override</span> <span class="identifier">GetTypeImplementerMapping</span> : 
        <span class="parameter">interfaces</span> : <span class="identifier">Type</span>[] * 
        <span class="parameter">proxyTargetType</span> : <span class="identifier">Type</span> * 
        <span class="parameter">contributors</span> : <span class="identifier">IEnumerable</span>&lt;<span class="identifier">ITypeContributor</span>&gt; <span class="keyword">byref</span> * 
        <span class="parameter">namingScope</span> : <span class="identifier">INamingScope</span> <span class="keyword">-&gt;</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">Type</span>&gt; 

<span class="keyword">abstract</span> <span class="identifier">GetTypeImplementerMapping</span> : 
        <span class="parameter">interfaces</span> : <span class="identifier">Type</span>[] * 
        <span class="parameter">proxyTargetType</span> : <span class="identifier">Type</span> * 
        <span class="parameter">contributors</span> : <span class="identifier">IEnumerable</span>&lt;<span class="identifier">ITypeContributor</span>&gt; <span class="keyword">byref</span> * 
        <span class="parameter">namingScope</span> : <span class="identifier">INamingScope</span> <span class="keyword">-&gt;</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">Type</span>&gt; 
<span class="keyword">override</span> <span class="identifier">GetTypeImplementerMapping</span> : 
        <span class="parameter">interfaces</span> : <span class="identifier">Type</span>[] * 
        <span class="parameter">proxyTargetType</span> : <span class="identifier">Type</span> * 
        <span class="parameter">contributors</span> : <span class="identifier">IEnumerable</span>&lt;<span class="identifier">ITypeContributor</span>&gt; <span class="keyword">byref</span> * 
        <span class="parameter">namingScope</span> : <span class="identifier">INamingScope</span> <span class="keyword">-&gt;</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">Type</span>&gt; </pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">interfaces</span></dt><dd>Type: <span id="LSTF63FAA5_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF63FAA5_1?cpp=array&lt;");</script><a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">System<span id="LSTF63FAA5_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF63FAA5_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Type</a><span id="LSTF63FAA5_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF63FAA5_3?cpp=&gt;|vb=()|nu=[]");</script><br />Additional interfaces to implement.</dd><dt><span class="parameter">proxyTargetType</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">System<span id="LSTF63FAA5_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF63FAA5_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Type</a><br />The target type for the proxy.</dd><dt><span class="parameter">contributors</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">System.Collections.Generic<span id="LSTF63FAA5_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF63FAA5_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IEnumerable</a><span id="LSTF63FAA5_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF63FAA5_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="nolink">ITypeContributor</span><span id="LSTF63FAA5_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF63FAA5_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTF63FAA5_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF63FAA5_8?cpp=%");</script><br />The list of contributors that will be used to generate the type.</dd><dt><span class="parameter">namingScope</span></dt><dd>Type: <span class="nolink">INamingScope</span><br />The proxy type naming scope.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/9eekhta0" target="_blank">IEnumerable</a><span id="LSTF63FAA5_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF63FAA5_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a><span id="LSTF63FAA5_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF63FAA5_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />
            The list of types being implemented.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
            This version of the method basically does the same thing as the
            original/base implementation but with these key differences:
            </p><ul><li><strong>No mixin support</strong> - 
            The original version of the method looks at the <span class="nolink">ProxyGenerationOptions</span>
            to see if there are any mixins to be added to the generated proxy.
            There is no need for mixin support in WCF service hosting so mixins
            aren't even checked for and won't be added.
            </li><li><strong>No additional interfaces</strong> - 
            The original version of the method goes through each of the additional
            interfaces that the are to be implemented, checks them against collisions
            with mixin definitions, and adds type mappings for the additional interfaces.
            The only interface that needs to be implemented for the WCF hosting
            proxy is the service interface, so all of that additional interface
            checking is skipped.
            </li><li><strong>Custom instance contributor used</strong> - 
            The original version of the method uses the
            <span class="nolink">InterfaceProxyInstanceContributor</span>
            as the code generator for the proxy type. Unfortunately, that contributor
            copies over all non-inherited attributes on the interface including
            the <a href="http://msdn2.microsoft.com/en-us/library/ms554648" target="_blank">ServiceContractAttribute</a>. The
            concrete proxy type can't have that attribute because the interface
            already has it, so WCF hosting dies. This version of the method uses
            the <a href="F7453D43.htm">IgnoreAttributeInterfaceProxyInstanceContributor</a>
            which does not copy over non-inherited attributes.
            </li></ul></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="B11048C8.htm">ServiceHostInterfaceProxyGenerator Class</a></div><div class="seeAlsoStyle"><a href="6EC2EF93.htm">Autofac.Multitenant.Wcf.DynamicProxy Namespace</a></div><div class="seeAlsoStyle"><a href="F7453D43.htm">Autofac.Multitenant.Wcf.DynamicProxy<span id="LSTF63FAA5_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF63FAA5_11?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IgnoreAttributeInterfaceProxyInstanceContributor</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://autofac.org" target="_blank">Copyright (c) 2007-2016 Autofac Contributors</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:autofac%40googlegroups.com?Subject=Autofac .NET Inversion of Control Container">autofac@googlegroups.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>